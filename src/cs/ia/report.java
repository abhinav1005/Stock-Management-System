/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs.ia;

import com.itextpdf.text.Chunk;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.pdf.PdfPTable;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Date;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
import javax.swing.JFileChooser;
 import javax.swing.filechooser.FileNameExtensionFilter;
//import org.apache.poi.xssf.usermodel.XSSFCell;
//import org.apache.poi.xssf.usermodel.XSSFRow;
//import org.apache.poi.xssf.usermodel.XSSFSheet;
//import org.apache.poi.xssf.usermodel.XSSFWorkbook;

//import java.time.LocalDate;
/**
 *
 * @author Abhinav
 */
public class report extends javax.swing.JFrame {
Connection conn = null;
ResultSet rs = null;
PreparedStatement pst = null;
    /**
     * Creates new form report
     */
    public report() {
        initComponents();
        conn = javaconnect.connecrDb();
    }
public void update_table(){
    
    try{
        String sql = " select * from PaymentDone";
         pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
          date_table.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }
    
    try{
        String sql = " select * from PaymentDue";
         pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
          date_table1.setModel(DbUtils.resultSetToTableModel(rs));
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
    }
}
public class export{
 
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        date_1 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        name = new javax.swing.JTextField();
        reportGenerator = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        date_2 = new com.toedter.calendar.JDateChooser();
        menu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        date_table1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        date_table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jButton1.setText("EXPORT TO EXCEL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel6.setText("PAYMENT DONE");
        jLabel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        date_1.setDateFormatString("yyyy-MM-dd");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "REPORT GENERATOR"));

        reportGenerator.setText("GENERATE REPORT");
        reportGenerator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportGeneratorActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Name");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(reportGenerator)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(reportGenerator)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        date_2.setDateFormatString("yyyy-MM-dd");

        menu.setText("MENU");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        date_table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BillID", "CustomerName", "CustomerID", "Amount", "Date"
            }
        ));
        jScrollPane1.setViewportView(date_table1);
        if (date_table1.getColumnModel().getColumnCount() > 0) {
            date_table1.getColumnModel().getColumn(0).setPreferredWidth(3);
            date_table1.getColumnModel().getColumn(2).setPreferredWidth(5);
            date_table1.getColumnModel().getColumn(3).setPreferredWidth(7);
            date_table1.getColumnModel().getColumn(4).setPreferredWidth(7);
        }

        jLabel5.setText("PAYMENT DUE");
        jLabel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("SEARCH BY NAME");

        jLabel4.setText("SEARCH BY DATE");

        search.setText("SEARCH");
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel2.setText("SEARCH BY BILL NO.");

        date_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BillID", "CustomerName", "CustomerID", "Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(date_table);
        if (date_table.getColumnModel().getColumnCount() > 0) {
            date_table.getColumnModel().getColumn(0).setPreferredWidth(3);
            date_table.getColumnModel().getColumn(2).setPreferredWidth(5);
            date_table.getColumnModel().getColumn(3).setPreferredWidth(7);
            date_table.getColumnModel().getColumn(4).setPreferredWidth(7);
        }

        jPanel3.setBackground(new java.awt.Color(255, 51, 0));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REPORT INVOICE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(363, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(352, 352, 352))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(date_1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(date_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(search)
                            .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(menu)
                        .addGap(23, 23, 23)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(date_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(date_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(search)))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
           int a =0;
if(a==0){
     DefaultTableModel model = (DefaultTableModel) date_table.getModel();
     model.setRowCount(0);
     DefaultTableModel model1 = (DefaultTableModel) date_table1.getModel();
     model1.setRowCount(0);
a=a+1;
}
 if(a==1){   
try {      
      String v1 = ((JTextField)date_1.getDateEditor().getUiComponent()).getText();
      String v2 = ((JTextField)date_2.getDateEditor().getUiComponent()).getText();
    String sql = "select * from PaymentDone where Date between '" +v1+ "' AND '" +v2+ "'";
    pst = conn.prepareStatement(sql);
   // pst.setString(1,((JTextField)date_1.getDateEditor().getUiComponent()).getText());
      rs = pst.executeQuery();    
    if(rs.next()){
        do{
            String add1 = rs.getString("BillID");
            String add2 = rs.getString("CustomerName");
            String add3 = rs.getString("CustomerID");
            String add4 = rs.getString("Amount");
            String add5 = rs.getString("Date");

            DefaultTableModel model = (DefaultTableModel)date_table.getModel();
            model.addRow(new Object[]{add1,add2,add3,add4,add5});
        } while(rs.next());
        
    }
            
        
    else{
        JOptionPane.showMessageDialog(null,"product found");
    }
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);        
}

try {
      
      String v1 = ((JTextField)date_1.getDateEditor().getUiComponent()).getText();
      String v2 = ((JTextField)date_2.getDateEditor().getUiComponent()).getText();
      
    String sql = "select * from PaymentDue where Date between '" +v1+ "' AND '" +v2+ "'";
    pst = conn.prepareStatement(sql);
   // pst.setString(1,((JTextField)date_1.getDateEditor().getUiComponent()).getText());
      rs = pst.executeQuery();    
    if(rs.next()){
        do{
            String add1 = rs.getString("BillID");
            String add2 = rs.getString("CustomerName");
            String add3 = rs.getString("CustomerID");
            String add4 = rs.getString("Amount");
            String add5 = rs.getString("Date");

            DefaultTableModel model = (DefaultTableModel)date_table1.getModel();
            model.addRow(new Object[]{add1,add2,add3,add4,add5});
        } while(rs.next());
        
    }
            
        
    else{
        JOptionPane.showMessageDialog(null, "Product found");
    }
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);        
}

 }    
      /*  
          int a =0;
if(a==0){
     DefaultTableModel model = (DefaultTableModel) date_table.getModel();
     model.setRowCount(0);
     DefaultTableModel model1 = (DefaultTableModel) date_table1.getModel();
     model1.setRowCount(0);
a=a+1;
}
 if(a==1){   
try {
    String sql = "select * from PaymentDone where Date =?"; 
    pst = conn.prepareStatement(sql);
    pst.setString(1,((JTextField)date_1.getDateEditor().getUiComponent()).getText());
      rs = pst.executeQuery();    
    if(rs.next()){
        do{
            String add1 = rs.getString("BillID");
            String add2 = rs.getString("CustomerName");
            String add3 = rs.getString("CustomerID");
            String add4 = rs.getString("Amount");
            String add5 = rs.getString("Date");

            DefaultTableModel model = (DefaultTableModel)date_table.getModel();
            model.addRow(new Object[]{add1,add2,add3,add4,add5});
        }while(rs.next());
    }
    else{
        JOptionPane.showMessageDialog(null,"not found in Payment Done");
    }
    
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);        
}
try {
    String sql = "select * from PaymentDue where Date =? ";      
    pst = conn.prepareStatement(sql);
   pst.setString(1,((JTextField)date_1.getDateEditor().getUiComponent()).getText());

      rs = pst.executeQuery();
      
    if(rs.next()){

        do{
            String add1 = rs.getString("BillID");
            String add2 = rs.getString("CustomerName");
            String add3 = rs.getString("CustomerID");
            String add4 = rs.getString("Amount");
            String add5 = rs.getString("Date");

            DefaultTableModel model = (DefaultTableModel)date_table1.getModel();
            model.addRow(new Object[]{add1,add2,add3,add4,add5});
            
        }while(rs.next());
        
    }
    else{
        JOptionPane.showMessageDialog(null,"not found in Payment due");
    }
  //  date_table.setModel(DbUtils.resultSetToTableModel(rs));  
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "no results found");

        
}
 
  
            
        }
       
    /*  LocalDate d1=date_1.getDate();
LocalDate d2= date_2.getDate();
String t1=d1.toString()+" 23:59:59";
String t2=d2.toString()+" 23:59:59";

System.out.println(t1);

try{ conn=javaconnect.connecrDb();
 
    String values="select * from PaymentDone where Date BETWEEN '"+t1+"' AND '"+2+"'";
   
    pst=conn.prepareStatement(values);
    rs =pst.executeQuery();
    date_table.setModel(DbUtils.resultSetToTableModel(rs));
    conn.close();
}catch(SQLException e){e.getMessage(); 
            }
 */
    }//GEN-LAST:event_searchActionPerformed

    private void reportGeneratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportGeneratorActionPerformed

        try {
                    
            Document doc = new Document();
             String a = name.getText();
        String b = a+".pdf";
PdfWriter.getInstance(doc,new FileOutputStream(b));
            doc.open();
            Image image = Image.getInstance("logo1.jpg");
            image.setAlignment(image.ALIGN_CENTER);
            doc.add((Element) image);
            
            Paragraph p = new Paragraph();
            p.add("INDUSTRIAL MARKETING");
            p.setAlignment(Paragraph.ALIGN_CENTER);
            Paragraph d = new Paragraph();
            d.add("_________________________________________");
            d.setAlignment(Paragraph.ALIGN_CENTER);
            Paragraph e = new Paragraph();
            e.add("Block No 8, Flat No 43, LF Type, Road No 10, Rajendranagar, Patna - 800016, Opposite Gulzar Mansion ");
            e.setAlignment(Paragraph.ALIGN_CENTER);
            Paragraph f = new Paragraph();
            f.add(" ");
            Paragraph g = new Paragraph();
            g.add("Payment Done : ");
            Paragraph blank = new Paragraph();
            blank.add(" ..................");
            Paragraph h = new Paragraph();
            h.add("Payment Due : ");
            
            doc.add(p);
            doc.add(f);
            doc.add(d);
            doc.add(e);
            doc.add(f);
            doc.add(g);
            doc.add(f);

            PdfPTable pdfTable = new PdfPTable(date_table.getColumnCount());
            //adding table headers
            for (int i = 0; i < date_table.getColumnCount(); i++) {
                pdfTable.addCell(date_table.getColumnName(i));
            }
            for (int rows = 0; rows < date_table.getRowCount() ; rows++) {
                for (int cols = 0; cols < date_table.getColumnCount(); cols++) {
                    pdfTable.addCell(date_table.getModel().getValueAt(rows, cols).toString());
                }
            }
            doc.add(pdfTable);
            
            doc.add(d);
            doc.add(f);
            doc.add(f);
            doc.add(Chunk.NEWLINE);
            PdfPTable table = new PdfPTable(date_table1.getColumnCount());
            for(int col = 0; col < date_table1.getColumnCount(); col++){
                table.addCell(date_table1.getColumnName(col));
            }
            for(int row = 0; row<date_table1.getRowCount();row++){
                 for (int cols = 0; cols < date_table1.getColumnCount(); cols++) {
                    table.addCell(date_table1.getModel().getValueAt(row, cols).toString());
            }
            }
            doc.add(h);
            doc.add(f);
            doc.add(table);
            doc.add(f);
            doc.add(d);
            doc.close();
            JOptionPane.showMessageDialog(null,"SAVED");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }   

        
    }//GEN-LAST:event_reportGeneratorActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
  // TODO add your handling code here:
    }//GEN-LAST:event_searchMouseClicked

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
menu info = new menu();
info.setVisible(true);
this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_menuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
//
  //      JFileChooser excelFileChooser = new JFileChooser("C:\\Users\\Abhinav\\Desktop\\EXCEL");
//excelFileChooser.setDialogTitle("Save As"); 
//FileNameExtensionFilter fn = new FileNameExtensionFilter("EXCEL ", " xls " , "xlsx", "xlsm");
//excelFileChooser.setFileFilter(fn);
//int excelchoose = excelFileChooser.showSaveDialog(null);

//if (excelchoose == JFileChooser.APPROVE_OPTION){
    
  //  try{
        
    
    //XSSFWorkbook excelJTableExporter = new XSSFWorkbook();
    //XSSFSheet excelSheet = excelJTableExporter.createSheet("Table sheet");
    
 //   for(int i =0; i< date_table.getRowCount(); i++){
   //     XSSFRow row = excelSheet.createRow(i);
     //   for(int j = 0; j<date_table.getColumnCount(); j++){
       //     XSSFCell Cell = row.createCell(j);
            
  //          Cell.setCellValue(date_table.getValueAt(i,j).toString());
    //    }
    //}
    
    //FileOutputStream excel = new FileOutPutStream(excelFileChooser.getSelectedFile()+ ".xlsx");
   // FileOutputStream FOU;
    
     //   FOU = new FileOutputStream(excelFileChooser.getSelectedFile()+ ".xlsx");
//    BufferedOutputStream BOU = new BufferedOutputStream(FOU);
  //  excelJTableExporter.write(BOU);
    
//}   catch (FileNotFoundException ex) {
  //      Logger.getLogger(report.class.getName()).log(Level.SEVERE, null, ex);
    //} catch (IOException ex) {
      //  Logger.getLogger(report.class.getName()).log(Level.SEVERE, null, ex);
 //   }
//excelFileChooser.showSaveDialog(null);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
     
   
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser date_1;
    private com.toedter.calendar.JDateChooser date_2;
    private javax.swing.JTable date_table;
    private javax.swing.JTable date_table1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton menu;
    private javax.swing.JTextField name;
    private javax.swing.JButton reportGenerator;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
}
