/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs.ia;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.net.PasswordAuthentication;
import java.sql.*;
import javax.swing.*;
import java.sql.*;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import net.proteanit.sql.DbUtils;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Abhinav
 */
public class CustomerInfo extends javax.swing.JFrame {
Connection conn = null;
PreparedStatement pst = null;
ResultSet rs = null;
    /**
     * Creates new form order
     */
    public CustomerInfo() {
        
        initComponents();
    conn = javaconnect.connecrDb();
    update_table();
    Order_id();
    }
    
    public void Order_id(){
        try{
        String sql = "select max(CustomerID) from customerInventory";
        pst = conn.prepareStatement(sql);
       rs = pst.executeQuery();
        
        if(rs.next()){
        
            int old_id = rs.getInt(1);
            int new_id = old_id + 1;
        String bc = Integer.toString(new_id);
        customerID_tf.setText(bc);
        
   
        }
   
           
        }catch(Exception e){
            
        JOptionPane.showMessageDialog(null,e);
            }
       
    }
 private void update_table(){
        try{
            
        String sql = "select * from customerInventory";
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
          customer_inventory.setModel(DbUtils.resultSetToTableModel(rs));
          
        customerID_tf.setText(null);
        customerN_tf.setText(null);
        customerA_tf.setText(null);
        contact_tf.setText(null);
        
       
       
               rs.close();
               pst.close();  
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
  
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        contact_tf = new javax.swing.JTextField();
        delete_button1 = new javax.swing.JButton();
        add_button = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchName = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        customerID_tf = new javax.swing.JTextField();
        menu = new javax.swing.JButton();
        customerN_tf = new javax.swing.JTextField();
        customerA_tf = new javax.swing.JTextField();
        SearchID = new javax.swing.JButton();
        search_txt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        customer_inventory = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        print = new javax.swing.JButton();
        Email_send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        delete_button1.setText("DELETE");
        delete_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_button1ActionPerformed(evt);
            }
        });

        add_button.setText("ADD");
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_buttonActionPerformed(evt);
            }
        });

        jLabel8.setText("Contact number");

        jLabel2.setText("Customer name");

        searchName.setText("SEARCH BY NAME");
        searchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Customer ID");

        jLabel4.setText("Customer address");

        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        customerID_tf.setEditable(false);

        menu.setText("MENU");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        SearchID.setText("SEARCH BY ID");
        SearchID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchIDActionPerformed(evt);
            }
        });

        customer_inventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        customer_inventory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customer_inventoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customer_inventory);

        jPanel2.setBackground(new java.awt.Color(255, 51, 0));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CUSTOMER DETAILS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        print.setText("PRINT");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        Email_send.setText("SEND EMAIL");
        Email_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Email_sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerID_tf))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerN_tf))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(customerA_tf))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(contact_tf)))
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Email_send, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(add_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(delete_button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(clear)
                                        .addGap(109, 109, 109)
                                        .addComponent(search_txt)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(searchName, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(menu, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                        .addGap(323, 323, 323)
                                        .addComponent(SearchID, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(12, 12, 12)))
                .addGap(56, 56, 56))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerID_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerN_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerA_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contact_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_button)
                    .addComponent(delete_button1)
                    .addComponent(clear)
                    .addComponent(searchName)
                    .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(print, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(menu)
                        .addComponent(SearchID)
                        .addComponent(update)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Email_send)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void add_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_buttonActionPerformed
if(customerID_tf.getText().trim().isEmpty() || customerN_tf.getText().trim().isEmpty() || customerA_tf.getText().trim().isEmpty() || contact_tf.getText().trim().isEmpty()){
JOptionPane.showMessageDialog(null,"Enter All Fields");    
}else{
        try{
            String sql = "Insert into customerInventory (CustomerID,Name, Address, Contact) values (?,?,?,?)";
            pst = conn.prepareStatement(sql);
            
            pst.setString(1,customerID_tf.getText());
            pst.setString(2,customerN_tf.getText());
            pst.setString(3,customerA_tf.getText());
            pst.setString(4,contact_tf.getText());
            
            pst.execute();
            update_table();
            Order_id();
            
            // rs.close();
            // pst.close();
          
        }catch(Exception e){
            
            JOptionPane.showMessageDialog(null,e);
        }
}
    }//GEN-LAST:event_add_buttonActionPerformed

    private void customer_inventoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_inventoryMouseClicked
try{
    int row = customer_inventory.getSelectedRow();
    
String Table_click = (customer_inventory.getModel().getValueAt(row, 0).toString());
String sql = "select * from customerinventory where CustomerID = '"+Table_click+" ' ";

pst = conn.prepareStatement(sql);
rs = pst.executeQuery();




if(rs.next()){
String add1 = rs.getString("CustomerID");
customerID_tf.setText(add1);
String add2 = rs.getString("Name");
customerN_tf.setText(add2);
String add3 = rs.getString("Address");
customerA_tf.setText(add3);
String add4 = rs.getString("Contact");
contact_tf.setText(add4);
 
             //  rs.close();
             //  pst.close();
}
}catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
    
    
}
        // TODO add your handling code here:
    }//GEN-LAST:event_customer_inventoryMouseClicked

    private void delete_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_button1ActionPerformed
int msg = JOptionPane.showConfirmDialog(null,"Confirm if you want to delete","DELETE",JOptionPane.YES_NO_OPTION);    
if(msg==0){
String sql = "delete from customerInventory where customerID =?";

try{
pst = conn.prepareStatement(sql);
pst.setString(1,customerID_tf.getText());
pst.execute();

JOptionPane.showMessageDialog(null,"DELETED");
update_table();
Order_id();


              
}catch(Exception e){
    
    JOptionPane.showMessageDialog(null,e);
        }
        }// TODO add your handling code here:
    }//GEN-LAST:event_delete_button1ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
customerID_tf.setText(null);
customerN_tf.setText(null);
customerA_tf.setText(null);
contact_tf.setText(null);
search_txt.setText(null);
update_table();
Order_id();// TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
menu info = new menu();
info.setVisible(true);
this.dispose();
// TODO add your handling code here:
    }//GEN-LAST:event_menuActionPerformed

    private void searchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNameActionPerformed

        try{
        String sql = "select * from CustomerInventory where Name =?";
        
        pst = conn.prepareStatement(sql);
        pst.setString(1,search_txt.getText());
        
        rs = pst.executeQuery();
        
        if(rs.next()){
            String add1 = rs.getString("CustomerID");
            customerID_tf.setText(add1);
            String add2 = rs.getString("Name");
            customerN_tf.setText(add2);
            String add3 = rs.getString("Address");
            customerA_tf.setText(add3);
            String add4= rs.getString("Contact");
            contact_tf.setText(add4);
            
         JOptionPane.showMessageDialog(null,"Customer Found");
        }          
           
               rs.close();
               pst.close();
            } catch(Exception e){
JOptionPane.showMessageDialog(null, " Customoer Not Found");
        
            }  // TODO add your handling code here:
                                                    // TODO add your handling code here:
    }//GEN-LAST:event_searchNameActionPerformed

    private void SearchIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchIDActionPerformed
 
        try{
        
            String sql = "select * from customerInventory where customerID =? ";
           pst = conn.prepareStatement(sql);
           pst.setString(1, search_txt.getText());
           
           rs = pst.executeQuery();
          /**if(rs.next()==false){
    JOptionPane.showMessageDialog(null,"no such field found");}
    else{**/ 
           if(rs.next()){
               String add1 = rs.getString("CustomerID");
               customerN_tf.setText(add1);
                 String add2 = rs.getString("Name");
               customerID_tf.setText(add2);
                 String add3 = rs.getString("Address");
               customerA_tf.setText(add3);
                 String add4 = rs.getString("Contact");
               contact_tf.setText(add4);
           
        }
        
               rs.close();
               pst.close();
        }catch(Exception e){
            
            JOptionPane.showMessageDialog(null, e);
        }// TODO add your handling code here:
                                                
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchIDActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
try{
    String val1 =customerID_tf.getText();
    String val2 =customerN_tf.getText();
    String val3 =customerA_tf.getText();
    String val4 =contact_tf.getText();
    
    
    String sql = "update customerInventory set CustomerID = '"+val1+"',Name = '"+val2+"',Address = '"+val3+"',Contact = '"+val4+"'where CustomerID='"+val1+"' ";
    pst = conn.prepareStatement(sql);     
// pst.setString(1, customerID_tf.getText());
   pst.execute();
   JOptionPane.showMessageDialog(null,"UPDATED");
   update_table();
    Order_id();
    
}catch(Exception e){
    JOptionPane.showMessageDialog(null, e);
}

    }//GEN-LAST:event_updateActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
try{
        Document document = new Document();
PdfWriter.getInstance(document,new FileOutputStream("CustomerDetails.pdf"));
document.open();
document.add(new Paragraph(" "));

  int a  = customer_inventory.getColumnCount();
            PdfPTable table = new PdfPTable(a);
            for(int i=0; i<a;i++){
                table.addCell(customer_inventory.getColumnName(i));
            }
            for(int row = 0; row<customer_inventory.getRowCount(); row++){
                for(int col = 0; col<a; col++){
                    table.addCell(customer_inventory.getModel().getValueAt(row,col).toString());
                }
            }
            
            document.add(table);
document.close();
JOptionPane.showMessageDialog(null,"Customer report saved");
}
catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
}
    }//GEN-LAST:event_printActionPerformed

    private void Email_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Email_sendActionPerformed
String a = contact_tf.getText();
        try {

            String host = "smtp.gmail.com";
            String user = "abhinavk@muwci.net"; 
            String pass = "AviAbhi.05"; 
            String to = a;
            String from = "abhinavk@muwci.net"; 
            String sub = "PAYMENT DUE"; 
            String Text = "Please make the payment required to Industrial Marketing"; 
            boolean sessionDebug = false;
            Properties props = System.getProperties();

            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.required", "true");

            java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
            Session mailSession = Session.getDefaultInstance(props, null);
            mailSession.setDebug(sessionDebug);
            Message msg = new MimeMessage(mailSession);
            msg.setFrom(new InternetAddress(from));
            InternetAddress[] address = {new InternetAddress(to)};
            msg.setRecipients(Message.RecipientType.TO, address);
            msg.setSubject(sub);
            msg.setText(Text);

            Transport transport = mailSession.getTransport("smtp");
            transport.connect(host, user, pass);
            transport.sendMessage(msg, msg.getAllRecipients());
            transport.close();
            JOptionPane.showMessageDialog(null,"EMAIL SENT SUCCESSFULLY");
        } catch (Exception ex) {
            System.out.println(ex);
        }
    
        // TODO add your handling code here:
    }//GEN-LAST:event_Email_sendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Email_send;
    private javax.swing.JButton SearchID;
    private javax.swing.JButton add_button;
    private javax.swing.JButton clear;
    private javax.swing.JTextField contact_tf;
    private javax.swing.JTextField customerA_tf;
    private javax.swing.JTextField customerID_tf;
    private javax.swing.JTextField customerN_tf;
    private javax.swing.JTable customer_inventory;
    private javax.swing.JButton delete_button1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton menu;
    private javax.swing.JButton print;
    private javax.swing.JButton searchName;
    private javax.swing.JTextField search_txt;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

}